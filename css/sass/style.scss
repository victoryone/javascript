@import "reset";

$font-stack: Helvetica, sans-serif;
$primary-color: #333;

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}


body {
  font: 100% $font-stack;
  color: $primary-color;
}

nav {
  ul {
    margin: 0;
    padding: 0;
    line-style: none;
  }

  li {
    display: inline-block;
  }

  a {
    display: block;
    padding: 6px 12px;
    text-decoration: none;
  }
}

.box { @include border-radius(10px); }

///////////////////////////////////////////
.message {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  @extend .message;
  border-color: green;
}

.error {
  @extend .message;
  border-color: red;
}

.warning {
  @extend .message;
  border-color: yellow;
}

.container { width: 100%; }

//////////////////////////////////////
article[role="main"] {
  float: left;
  width: 600px / 960px * 100%;
}

aside[role="complimentary"] {
  float: right;
  width: 300px / 960px * 100%;
}

////////////////////////////////////////////
@mixin firefox-message($selector) {
  body.firefox #{$selector}:before {
    content: "Hi, Firefox users!";
  }
}

@include firefox-message(".header");

////////////////////////////////////////////
p {
  $font-size: 12px;
  $line-height: 30px;
  font-size: ($font-size/$line-height)+em;
}

//////////////////////////////////////////
$translucent-red: rgba(255, 0, 0, 0.5);
p {
  color: opacify($translucent-red, 0.3);
  background-color: transparentize($translucent-red, 0.25);
}

//////////////////////////////////
p {
  cursor: e + -resize;
}

///////////////////////////////////
$name: foo;
$attr: border;
p.#{$name} {
  #{$attr}-color: blue;
}

//////////////////////////////////
@mixin does-parent-exist {
  @if & {
    &:hover {
      color: red;
    }
  } @else {
    a {
      color: red;
    }
  }
}

.foo.bar .baz.bang, .bip.qux {
  $selector: &;
}

div {
  @include does-parent-exist;
}

div > a {
  @include does-parent-exist;
}

/////////////////////////////
.sidebar {
  width: 300px;
  @media screen and (orientation: landscape) {
    width: 500px;
  }
}

/////////////////////////////////
.error {
  border: 1px #f00;
  background-color: #fdd;
}
.attention {
  font-size: 3em;
  background-color: #ff0;
}
.seriousError {
  @extend .error;
  @extend .attention;
  border-width: 3px;
}


////////////////////////////////
#context a%extreme {
  color: blue;
  font-weight: bold;
  font-size: 2em;
}

.notice {
  @extend %extreme;
}

//////////////////////////////////
.parent {
  margin:0;
  @at-root {
    .child1 { margin:0; }
    .child2 { margin: 0; }
  }
  .step-child { margin:0; }
}

////////////////////////////////////
p {
  @if 1 + 1 == 2 { border: 1px solid;  }
  @if 5 < 3      { border: 2px dotted; }
  @if null       { border: 3px double; }
}

////////////////////////////////
$type: monster;
p {
  @if $type == ocean {
    color: blue;
  } @else if $type == matador {
    color: red;
  } @else if $type == monster {
    color: green;
  } @else {
    color: black;
  }
}

//////////////////////////////////
@for $i from 1 through 3 {
  .item-#{$i} { width: 2em * $i; }
}

//////////////////////////////////
@each $animal in puma, sea-slug, egret, salamander {
  .#{$animal}-icon {
    background-image: url('/images/#{$animal}.png');
  }
}

//////////////////////////////////////
@each $animal, $color, $cursor in (puma, black, default),
        (sea-slug, blue, pointer),
        (egret, white, move) {
  .#{$animal}-icon {
    background-image: url('/images/#{$animal}.png');
    border: 2px solid $color;
    cursor: $cursor;
  }
}

//////////////////////////////////////
$i: 6;
@while $i > 0 {
  .item-#{$i} { width: 2em * $i; }
  $i: $i - 2;
}

//////////////////////////////////////
@mixin clearfix {
  display: inline-block;
  &:after {
    content: ".";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
  }
  * html & { height: 1px }
}

///////////////////////////////////
* {
  @include clearfix;
}

////////////////////////////////
$grid-width: 40px;
$gutter-width: 10px;

@function grid-width($n) {
  @return $n * $grid-width + ($n - 1) * $gutter-width;
}

#sidebar { width: grid-width(5); }

